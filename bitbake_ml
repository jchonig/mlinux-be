#!/bin/bash

progname=$(basename $0)

add_env () {
    while read env; do
	[[ ${env} =~ ([^=]+)= ]]
	case ${BASH_REMATCH[1]} in
	    MTADM_PASSWORD|MACHINE|LANG)
		echo "-e ${env}"
		;;
	esac
    done < <(env)
}

# Container is named mlinux-N where N is the major version
MLINUX_VERSION=$(expr $(basename $PWD) : '\(.*-[0-9]*\)\..*')
if [ -z "${MLINUX_VERSION}" ]; then
    MLINUX_VERSION=$(git status --ignore-submodules -b | sed -nr '/^HEAD/s/HEAD detached at ([0-9]+)\..*/mlinux-\1/p')
fi
if [ -z "${MLINUX_VERSION}" ]; then
    echo "Unable to determine mLinux version from directory name or git" >&2; exit 1
fi

IMAGE=jchonig/mlinux-be
do_pull=missing

while [ $# -gt 0 ]; do
    case "${1}" in
	--setup)
	    progname=setup_ml
	    shift
	    ;;
	--local)
	    IMAGE=mlinux-be
	    shift
	    ;;
	--pull)
	    do_pull=always
	    shift
	    ;;
	*)
	    break
	    ;;
    esac
done

# Figure out what we are supposed to do
case ${progname} in
    bitbake*)
	CMD="${*}"
	;;
    setup*)
	CMD="--setup ${*}"
	;;
    *)
	echo "Unknown script link ${progname}" 2>&1
	exit 1
	;;
esac


BUILD_DIR="/$(basename ${PWD})"
# It's necessary to pass our symbolic and numeric user and group info
# to the container so the run script will work properly.
docker run -it \
       -e BUILD_USER=${USER} \
       -e BUILD_GROUP=$(groups | cut -d' ' -f1) \
       -e BUILD_UID=$(id -u) \
       -e BUILD_GID=$(id -g) \
       -e BUILD_DIR=${BUILD_DIR} \
       $(eval add_env) \
       -v ${PWD}:/${BUILD_DIR} \
       --pull ${do_pull} \
       ${IMAGE}:${MLINUX_VERSION} ${CMD}
